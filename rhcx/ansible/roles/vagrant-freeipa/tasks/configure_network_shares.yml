---
- name: Ensure export directories exists
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { path: '/srv', owner: 'root', group: 'root', mode: '0755' }
    - { path: '/srv/nfs', owner: 'root', group: 'root', mode: '0755' }
    - { path: '/srv/samba', owner: 'root', group: 'root', mode: '0755' }
    - { path: '/home/ldap', owner: 'root', group: 'root', mode: '0755' }
    - { path: '/data', owner: 'root', group: 'root', mode: '0755' }
  become: yes
- name: Ensure there is data in the /data directory
  file:
    path: /data/{{ item }}
    state: touch
  with_items:
    - datafile1
    - datafile2
  become: yes
- name: Ensure NFS shares are configured
  lineinfile:
    path: /etc/exports
    line: "{{ item }}"
  become: yes
  with_items:
    - "/srv/nfs	*(rw)"
    - "/data	*(rw)"
    - "/home/ldap	*(rw)"
- name: Ensure nfs-server is started and enabled at boot
  service:
    name: nfs-server
    state: started
    enabled: yes
  become: yes
- name: Ensure SAMBA server and client is installed
  yum:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
    - samba
    - samba-client
- name: Ensure CIFS shares are configured
  blockinfile:
    path: /etc/samba/smb.conf
    content: |

      [data]
      	comment = data share
      	path = /srv/samba
  become: yes
- name: Ensure SAMBA is started and enabled at boot
  service:
    name: smb
    state: started
    enabled: yes
  become: yes
# Every Ansible task file needing to manipulate the firewall must make sure
# software requirements for Ansible to manipulate the firewall are installed
# and the firewall service in enabled and started.
- name: Ensure necessary packages are installed
  package:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
    - python-firewall
- name: Ensure firewalld is started and enabled at boot
  service:
    name: firewalld
    state: started
    enabled: yes
  become: yes
- name: Ensure NFS and SMB traffic is allowed
  firewalld:
    service: "{{ item.service }}"
    state: enabled
    permanent: yes
    immediate: yes
    zone: "{{ item.zone }}"
  with_items:
    - { zone: internal, service: nfs }
    - { zone: internal, service: samba }
    - { zone: internal, service: samba-client }
  become: yes
