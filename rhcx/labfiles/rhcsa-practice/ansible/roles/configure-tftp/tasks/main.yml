---
- name: Ensure necessary packages are installed
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - tftp-server
    - xinetd
  become: yes
- name: Ensure the default config and support files for pxelinux are installed
  copy:
    dest: /root
    src: "{{ item }}"
  with_items:
    - default
    - graphics.conf
  become: yes
- name: Ensure the kernel and initrd.img launched by pxelinux exist
  get_url:
    dest: "/root/{{ item }}"
    url: "http://mirror.centos.org/centos/7/os/x86_64/isolinux/{{ item }}"
  with_items:
    - vmlinuz
    - initrd.img
  delegate_to: "{{ inventory_hostname }}"
  become: yes
- name: Ensure directory for kickstart files exists
  file:
    path: "/root/ks"
    state: directory
  become: yes
- name: Ensure kickstart files are copy to the ks web directory
  copy:
    dest: "/root/ks"
    src: "ks.cfg"
  become: yes
- name: Ensure tftp is enabled in the xinetd configs
  lineinfile:
    path: /etc/xinetd.d/tftp
    state: present
    regexp: "^(	disable.*=.)yes$"
    line: '\1no'
    backrefs: yes
  become: yes
- name: Ensure xinetd and httpd are started and enabled at boot
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - xinetd
  become: yes
#- name: Ensure necessary packages are installed
#  package:
#    name: "{{ item }}"
#    state: present
#  become: yes
#  with_items:
#    - python-firewall
#- name: Ensure firewalld is started and enabled at boot
#  service:
#    name: firewalld
#    state: started
#    enabled: yes
#  become: yes
## Assume the default is a host with a single interface on an internal network.
## Make sure the default zone to which rules are applied and the system uses is
## the "internal" zone. The default will be to allow inbound ssh in the internal
## zone and any other service requirements need to be handled by the service
## playbooks. Also make sure any task manipulating the firewall notifies the
## "reload firewall" handler.
#- name: Ensure certain inbound traffic is allowed
#  firewalld:
#    service: "{{ item.service }}"
#    state: enabled
#    permanent: yes
#    immediate: yes
#    zone: "{{ item.zone }}"
#  with_items:
#    - { zone: internal, service: http }
#    - { zone: internal, service: tftp }
#  become: yes
