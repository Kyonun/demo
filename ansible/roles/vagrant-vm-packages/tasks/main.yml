---
# tasks file for packages
# Remove packages we don't want installed first
- name: Remove libreoffice
  apt: name=libreoffice-common state=absent purge=yes
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Remove libreoffice styles
  apt: name=libreoffice-style-galaxy state=absent purge=yes
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Remove firefox
  apt: name=firefox state=absent purge=yes
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Remove firefox-locale-en
  apt: name=firefox-locale-en state=absent purge=yes
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Remove unity-scope-firefoxbookmarks
  apt: name=unity-scope-firefoxbookmarks state=absent purge=yes
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Remove webbrowser-app
  apt: name=webbrowser-app state=absent purge=yes
  when: ansible_distribution == "Ubuntu"
  become: True
# Install packages that DO NOT require a GUI
- name: Install screen with apt
  apt: name=screen state=present
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Install tcpdump with apt
  apt: name=tcpdump state=present
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Install traceroute with apt
  apt: name=traceroute state=present
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Install vim with apt
  apt: name=vim state=present
  when: ansible_distribution == "Ubuntu"
  become: True
# Install packages that DO require a GUI
- name: Install chromium-browser
  apt: name=chromium-browser state=present
  when: ansible_distribution == "Ubuntu" and has_GUI == "yes"
  become: True
- name: Install nmap with apt
  apt: name=nmap state=present
  when: ansible_distribution == "Ubuntu" and has_GUI == "yes"
  become: True
- name: Install wireshark with apt
  apt: name=wireshark state=present
  when: ansible_distribution == "Ubuntu" and has_GUI == "yes"
  become: True
# The packages are needed for ansible to nmcli (network-manager) module
- name: Install python-dbus
  apt: name=python-dbus state=present
  when: ansible_distribution == "Ubuntu"
  become: True
- name: Install gir1.2-networkmanager-1.0
  apt: name=gir1.2-networkmanager-1.0 state=present
  when: ansible_distribution == "Ubuntu"
  become: True
# Kali2 specific package changes
- name: Install packages specific to Kali2
  apt: name={{ item }} state=present
  with_item:
    - openvas
    - mitmproxy
  become: True
  when: inventory_hostname == "Kali2"
  notify:
    - OpenVAS setup
# Revmove packages installed as dependencies for packages we removed
- name: Autoremove packages no longer needed
  command: apt-get -y autoremove
  when: ansible_distribution == "Ubuntu"
  become: True
