---
- name: Setup the dev environment for building demouser
  hosts: localhost
  vars:
    - install_dir: "{{ ansible_user_dir }}/demouser"
    - src_repo: "https://github.com/dmbrownlee/demouser.git"
    - iso_dir: "{{ install_dir }}/vm/basebox/iso"
    - iso: "ubuntu-15.10-server-amd64.iso"
    - iso_url: "http://mirror.pnl.gov/releases/15.10/ubuntu-15.10-server-amd64.iso"
    - sshpass_version: 1.05
  tasks:
    - stat: path=/usr/bin/git
      register: git_binary
    - fail: msg='Install git by running "git" on the command line (it is part of xcode).'
      when: git_binary.stat.exists == False
    - stat: path=/usr/local/bin/VBoxManage
      register: vboxmanage_binary
    - fail: msg='Download the latest VirtualBox dmg from https://www.virtualbox.org/ and install it.'
      when: vboxmanage_binary.stat.exists == False
    - stat: path=/usr/local/bin/vagrant
      register: vagrant_binary
    - fail: msg='Download the latest vagrant dmg from https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1.dmg and install it.'
      when: vagrant_binary.stat.exists == False
      #===================
      #= Install sshpass =
      #===================
    - stat: path=/usr/local/bin/sshpass
      register: sshpass_binary
    - name: Fetch sshpass tarball
      unarchive: copy=no src=http://iweb.dl.sourceforge.net/project/sshpass/sshpass/1.05/sshpass-{{ sshpass_version }}.tar.gz dest=/tmp
      when: sshpass_binary.stat.exists == False
    - name: Configure sshpass
      command: creates=/tmp/sshpass-{{ sshpass_version }}/Makefile chdir=/tmp/sshpass-{{ sshpass_version }} ./configure
    - name: Build the sshpass binary
      command: creates=/tmp/sshpass-{{ sshpass_version }}/sshpass chdir=/tmp/sshpass-{{ sshpass_version }} make
    - name: Install sshpass
      command: creates=/usr/local/bin/sshpass chdir=/tmp/sshpass-{{ sshpass_version }} make install
      become: yes
      #===================
    - name: Fetch demouser project from github
      git: clone=yes dest={{ install_dir }} repo={{ src_repo }}
    - stat: path={{ iso_dir }}/{{ iso }}
      register: iso_file
    - name: Download ubuntu server ISO used to build the basebox
      tags:
        get-iso
      get_url:
        dest: "{{ iso_dir }}"
        url: "{{ iso_url }}"
      when: iso_file.stat.exists == False
